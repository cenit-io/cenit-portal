<% title = 'Multi-Channel Messaging with Cenit' %>
<%= render 'shared/page_header', title: title, home: false %>

<div id="blogpost">
  <div id="blogpost-wrapper">
    <div class="container">
      <div class="row">
        <div class="col-sm-12">
          <div class="main-pic">
            <%= image_tag 'blog/multichannel/header.png', :alt => 'Multichannels', class: "img-responsive" %>
          </div>          
        </div>
      </div>
      <div class="row">
        <div class="col-sm-10 post">
          <div class="title">
            Multi-Channel Messaging with Cenit
          </div>
          <div class="author">
            <%= image_tag 'team/maria_esther.jpg', :alt => 'author', class: "avatar" %>
            By Maria Esther Guirola, Mar 1, 2016
          </div>
          <div class="content">
            <p>
              In this post we are going to see how we can send messages to different channels through Cenit. We'll see how Cenit manage different authentication modes like basic authentication, OAuth 1.0 and OAuth 2.0.
            </p>
            <p>
              We assume you have a Cenit account. If you do not have an account go on
                 <%=
                     link_to "CenitSaaS",
                            "https://www.cenitsaas.com"
                 %> and create one, itâ€™s free.
            </p>
            <p>
              Note: All examples use your Cenit account credentials (Key and Authentication token). Once inside Cenit you can find this, by clicking on your account name, under <i> Credentials</i> section.
            </p>
            <p align="center">
              <%= image_tag 'blog/multichannel/cenit_account.png', :alt => 'Details Cenit account', class: "img-responsive" %>
            </p>
            <p align="center">
              <%= image_tag 'blog/multichannel/cenit_credentials.png', :alt=> 'Account credentials', class: "img-responsive" %>
            </p>

            <h3>
              Twilio Integration
            </h3>
            <p>
              1. First you need to pull Twilio collection. Go to <b>Collections/SharedCollections</b>, search twilio and pull it.
            </p>
            <p align="center">
              <%= image_tag 'blog/multichannel/twilio_shared_coll.png', :alt => 'Shared collection', class: "img-responsive" %>
            </p>
            <p>
              2. Twilio uses basic authentication, so the collection ask for <i> Account SID </i> and <i> Auth Token </i>. This parameters are required to let Cenit access to your account. So, you have to go to your Twilio account and select Account.
            </p>
            <p align="left">
              <%= image_tag 'blog/multichannel/twilio_pull_coll.png', :alt => 'Pull Twilio collection', class: "img-responsive" %>
            </p>
            <p>
              3. In Twilio go to <i>Account</i> and copy the generated Account SID and Auth Token. Put them in Cenit and click <i>Pull</i> button.
            </p>
            <p align="center">
              <%= image_tag 'blog/multichannel/twilio_account.png', :alt => 'Twilio account', class: "img-responsive" %>
            </p>
            <p align="center">
              <%= image_tag 'blog/multichannel/twilio_account_credentials.png', :alt => 'Twilio account credentials', class: "img-responsive" %>
            </p>
            <p>
              4. Now you can create and send a message to Twilio using CenitHub API. Twilio messages are available at: https://www.Cenithub.com/api/v1/twilio/message
            </p>
            <p> To post a message to these URL just format a JSON document like this:
            </p>
            <pre>
              {
                 "from": "(919) 617- 9297",
                 "to": "(704) 615-2238",
                 "body": "Hi!"
              }
            </pre>

            <p>
              The form phone should be a Twilio valid number.
              The destination phone should be a verified number phone in twilio, listed in:
              https://www.twilio.com/user/account/phone-numbers/verified <br><br>
              You can try it with the following curl command: </p>
            <pre>
              curl -H "Content-Type: application/json"\
                   -H "X-User-Access-Key: XXXXXX"\
                   -H "X-User-Access-Token: YYYYYY"\
                   -X POST -d '{"from":"(919) 617- 9297","to":"(704) 615-2238","body":"Hi!"}'
                https://www.cenithub.com/api/v1/twilio/message
              </pre>

             <p style="font-size: 12px;">
               Note: <i>X-User-Access-Key</i> and <i>X-User-Access-Token</i> are your Cenit account credentials.
             </p>

            <p>
              Now, you can see the message in Twilio:
            </p>

            <%= image_tag 'blog/multichannel/twilio_sms.png', :alt => 'Message in Twilio', class: "img-responsive" %>

            <p>You can POST messages also in XML format: <br>
                 &lt;Message&gt;  <br>
                  &nbsp;&nbsp;&nbsp; &lt;to&gt; (919) 617- 9297 &lt;/to&gt;  <br>
                  &nbsp;&nbsp;&nbsp; &lt;from&gt; (704) 615-2238 &lt;/from&gt; <br>
                  &nbsp;&nbsp;&nbsp; &lt;body&gt; Hi! &lt;/body&gt; <br>
                 &lt;/Message&gt;
            </p>

            <p>
              And that's all, you've sent a message through Cenit using your authorized Twilio account.
            </p>
            
            <br>
             <%= render partial: 'shared/video', locals: { title: 'The easy way to connect with the <strong>Twilio API</strong>'.html_safe, video: 'https://www.youtube.com/embed/PTB6BBNyVhQ' } %>

            <br>
            <h3>Twitter Integration</h3>

            <p>
              1. First you need to pull Twitter collection. Go to <b>Collections/SharedCollections</b>, search twitter and pull it.
            </p>

            <%= image_tag 'blog/multichannel/twitter_shared_coll.png', :alt => 'Shared collection', class: "img-responsive" %>

            <p>
              2. Twitter uses OAuth 1.0 authentication, so, authorize your Twitter API OAuth1 authorization if it is not. For do this go to <b>Security/Authorizations/OAuth 1.0</b>.
            </p>

            <%= image_tag 'blog/multichannel/twitter_authorizations.png', :alt => 'Twitter authorization', class: "img-responsive" %>

            <p>
              3. Now you can create and send a message to Twitter using CenitHub API. Twitter messages are available at: https://www.cenithub.com/api/v1/twitter/tweet
            </p>
            <p>
              To post a message to these URL just format a JSON document like this:
            </p>
            <pre>
               {
                 "status": "Sent through CenitHub API"
               }
            </pre>

            <p> You can try it with the following curl command: </p>
            <pre>
              curl -H "Content-Type: application/json"\
                   -H "X-User-Access-Key: XXXXXX"\
                   -H "X-User-Access-Token: YYYYYY"\
                   -X POST -d '{ "status": "Sent through CenitHub API"}'
                https://www.cenithub.com/api/v1/twitter/tweet
            </pre>

            <p style="font-size: 12px;">
                Note: <i>X-User-Access-Key</i> and <i>X-User-Access-Token</i> are your Cenit account credentials.
            </p>

            <p>
              Then, you can see the tweet:
            </p>

            <%= image_tag 'blog/multichannel/twitter_tweet.png', :alt => 'Tweet', class: "img-responsive" %>

            <p> You can POST messages also in XML format:<br>
              &lt;Tweet&gt; <br>
                &nbsp;&nbsp;&nbsp; &lt;status&gt;Sent through CenitHub API&lt;/status&gt;  <br>
              &lt;/Tweet&gt;
            </p>
            <p>
              And that's all, you've sent a tweet through Cenit using your authorized Twitter account.
            </p>

            <br>
             <%= render partial: 'shared/video', locals: { title: '<strong>Twitter Integration</strong> using CenitSaaS'.html_safe, video: 'https://www.youtube.com/embed/jTBmw8AhWIE' } %>
            <br>

            <h3>
              Gmail Integration
            </h3>
            <p>
              1. First you need to pull Gmail collection. Go to <b> Collections/SharedCollections</b>,  search gmail and pull it.
            </p>
            <%= image_tag 'blog/multichannel/gmail_shared_coll.png', :alt => 'Shared collection', class: "img-responsive" %>

            <p>
              2. Gmail uses OAuth 2.0 authentication, so, authorize your Gmail API OAuth 2.0 authorization, if it is not. For do this go to <b>Security/Authorizations/OAuth 2.0</b>.
            </p>
            <%= image_tag 'blog/multichannel/gmail_authorizations.png', :alt => 'Gmail authorization', class: "img-responsive" %>

            <p>
              3. Now, you can create a new MIME Message. MIME messages are available at https://www.cenithub.com/api/v1/mime/message.
            </p>
            <p>To post a message to these URL just format a JSON document like these: </p>
            <pre>
              {
                "to": "someuser@gmail.com",
                "subject": "Hello",
                "body": "Just to say hello!"
              }
            </pre>

            <p>You can try it with the following curl command: </p>
            <pre>
              curl -H "Content-Type: application/json"\
                   -H "X-User-Access-Key: XXXXXX"\
                   -H "X-User-Access-Token: YYYYYY"
                   -X POST -d '{"to":"someuser@gmail.com","subject":"Hello","body":"Just to say hello!"}'
               https://www.cenithub.com/api/v1/mime/message
            </pre>

            <p style="font-size: 12px;">
              Note: <i>X-User-Access-Key</i> and <i>X-User-Access-Token</i> are your Cenit account credentials.
            </p>

            <p>Now, you can see the sent message in the Gmail account:</p>
            <%= image_tag 'blog/multichannel/gmail_email.png', :alt => 'Shared collection', class: "img-responsive" %>

            <p>Thatâ€™s it! You've sent a message using your authorized Google account.</p>

            <p>You can POST messages also in XML format: <br>
              &lt;Message&gt; <br>
                &nbsp;&nbsp;&nbsp;&lt;to&gt; someuser@gmail.com &lt;/to&gt; <br>
                &nbsp;&nbsp;&nbsp;&lt;subject&gt; Hello &lt;/subject&gt; <br>
                &nbsp;&nbsp;&nbsp;&lt;body&gt; Just to say hello! &lt;/body&gt; <br>
              &lt;/Message&gt;
            </p>

            <p>If you want to attach binary files you can encode them and specify the encoding format like these:</p>
            <pre>
              {
                "to": "someuser@gmail.com",
                "subject": "See attachment",
                "attachments": [
                  {
                    "filename": "file.txt",
                    "encoding": "urlsafe_base64",
                    "data": "U2VudCB0aHJvdWdoIENlbml0SHViIEFQSQ=="
                  }]
              }
            </pre>

            <p>The availables encoding formats are: </p>
              <ul>
                <li>base64</li>
                <li>strict_base64</li>
                <li>urlsafe_base64</li>
              </ul>
              
              <%= render partial: 'shared/video', locals: { title: 'The easy way to connect with the <strong>Gmail API</strong>'.html_safe, video: 'https://www.youtube.com/embed/oBmGtKd4Ia4' } %>

            <%= render 'footer' %>
          </div>        
        </div>
      </div>
    </div>
  </div>
</div>
