<% title = 'Screencast | Shipwire Integration on cenit.io' %>
<%= render 'shared/page_header', title: title, home: false %>

<div id="blogpost">
  <div id="blogpost-wrapper">
    <div class="container">
      <div class="row">
        <div class="col-sm-10 post">
          <div class="video">
            <div class="iframe-wrapper">
              <iframe src="https://www.youtube.com/embed/Xz7c1k0ZL_k" width="778" height="439" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
            </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-sm-10 post">
          <div class="title">
            <%= title %>
          </div>
          <div class="author">
            Aug 31, 2015
          </div>
          
          <div class="content">
              <p>Hi, the next video is about Shipwire integration in Cenit.io which is a storage company and fulfillment.</p>

              <p>First we will see how to make a pull to the shared Cenitâ€™s coleccion for Shipwire. Then some schemas, data types, as well as webhook associated. Finally some flow examples of integrations with Shipwire</p>

              <h3>Developing:</h3>

              <p>1. First we must locate our Cenit.io Data Integrator, in the browser typing the URL  <%= link_to 'www.cenitsaas.com', 'https://www.cenitsaas.com' %>, pressed the button which will ask for username and password, you are not registered in the system, we create an account.</p>

              <p>2. Already with the registered user, we enter Cenit.io, where you can see all collections and integrations that our system has. We press Shared Collections, which will show all shared collections, in this case we give pull to Shipwire-2.0.0, insert the username and password credentials that were created on the site <%= link_to 'www.shipwire.com', 'https://www.shipwire.com' %>, then pull pressed.</p>

              <p>3. Already in connection roles, we loaded our Shipwire API , then pressed and edit shows the Webhooks and Connections.</p>

              <p>4. To see our integration schemes with Shipwire, we press on the tab schemes where are listed, for example if we see the json schema of 'Order' , we seek and we click on Edit, where the schema is displayed with all the attributes and properties of a Shipwire Order.</p>

              <p>5. Here we can see and load the Data Type concerning this order, we click to play and if all is well, the notification 'loaded order.json' will be shown, appear below 'Shipwire' with the data type order, without any related instance.</p>

              <p>6. Another important element that we see are the Webhooks, such as Cancel Order List Orders, Create Order. This will be one of the examples that we present, we press edit and observe the route and method to create an order via HTTP Post.</p>

              <p>7. We may also see our integration flows. Such as: Get Order, List Orders and Create Order. This flow 'Create Order' needed a translator Export type, which we present.</p>

              <p>8. For this integration performed several translators. Such as: Model Export, Import Stock List, 'Update Order' that performs the update of the items in the order.</p>

              <h3>Examples.</h3>

              <p>1. To review better this integration with Shipwire, we'll go <%= link_to 'app.shipwire.com', 'http://app.shipwire.com/'%>
              You type the username and password, remember that if you do not have an account you must create one.</p>

              <p>2. Once we are already at the test site Shipwire, we have in this order, products and activity history, showing all activities to date. The last is an order created with a description.</p>

              <p>3. Now we will create an order from Cenit.io, then we send it to Shipwire to be launch.
              To do this, first import a valid json schema for an order, in this case we got the email, a name, an address and other items of interest.</p>

              <p>Then I select the basic translator for import json. And if all goes well, a new order is displayed on my Cenit.io. The next step is to send the order to Shipwire, by Flow -> Create Order.</p>

              <p>Now if we update the website of Shipwire, we can see the order created with the fields defined in the  json schema.</p>

              <p>4.Now let's look at another example. We want Shipwire list all the products; to do this, we must load the Data Type product. Once loaded we see that the data type product is listed below.</p>

              <p>Initially, this does not show Cenit.io products, because we must get them from Shipwire, therefore we must execute the flow Products List, which has a translator Import List.
              If we click Play, it shows us that everything went successfully.</p>

              <p>If we click on Product as we are 9 products in Shipwire. These are Laptop, Mouse, SporWatch, etc.</p>

              <p>The data in both systems are coherent or whether they are the same products. So the integration was successful.</p>

              <p>Remember, that you can enter in <%= link_to 'cenitsaas.com', 'http://cenitsaas.com'%> , where you will find several integrations ready for use out of the box.</p>

              <p>Until next video from Cenit.io integration.</p>
              
              <%= render 'footer' %>

          </div>

        </div>
      </div>
    </div>
  </div>
</div>