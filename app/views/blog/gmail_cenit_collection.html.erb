<% title = 'The easy way to connect with the Gmail API' %>
<%= render 'shared/page_header', title: title, home: false %>
<div id="blogpost">
  <div id="blogpost-wrapper">
    <div class="container">
      <div class="row">
        <div class="col-md-12">
          <div class="main-pic">
            <%= image_tag 'blog/gmail_cenit_collection.png', :alt => 'commits first year', class: "img-responsive" %>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-10 post">
          <div class="title">
            <%= title %>
          </div>
          <div class="author">
            <%= image_tag 'team/maikel.jpg', :alt => 'author', class: 'avatar' %>
            Maikel Arcia, Mar 3, 2016
          </div>

          <div class="content">

            <p>
              We have recently brought the set of
              <%=
                  link_to 'API collections to connect with the Google services', cenit_api_collections_for_google_services_blog_index_path, data: { no_turbolink: true }
              %>, to let you access an entire API through a single authorization point, with an offline
              and background running logic for the automatic management of the OAuth 2.0 protocol implementation
              provided by Google.
              Nevertheless, interacting with an API may be a little awkward. To use the Gmail API, for example, you
              have to format emails following the MIME standard, then you have to encode them in base64,
              and then you have to conform a JSON document following a Gmail API schema. </p>

            <p>
              Hopefully you do not have to run the awkward way anymore, because the Gmail Cenit
              Collection is now available, a wrapper that let you send emails as easy as it can be.
              Try it now by following the next steps by yourself, signing up for free in cenit.io.</p>

            <h1 style="line-height: 100%; page-break-before: auto; page-break-after: auto">
              Trying the Gmail Collection
            </h1>

            <p>
              First of all go to the
              <%= link_to 'Gmail Shared Collection','https://cenit.io/setup~shared_collection/gmail/pull' %> and pull it with your cenit.io account. If you do not have a cenit.io account go on anyway and create one, itâ€™s free.</p>

            <p align="center">
              <%= image_tag 'blog/pull_gmail.png', :alt => 'pull gmail collection', class: "img-responsive" %>
            </p>

            <p>
              Once you have successfully executed the pull action you are redirected to your
              <%= link_to 'Gmail Shared Collection','https://cenit.io/setup~shared_collection/gmail/pull' %>. Now you should follow the steps on the 'Quick Start' section of the collection readme.
              Two simple steps, and you will send an email with your Google account through CenitHub,
              just click the links to get them done
            </p>

            <p align="center">
              <%= image_tag 'blog/gmai_quickstart.png', :alt => 'gmail quick start', class: "img-responsive" %>
            </p>

            <h1 style="line-height: 100%; page-break-before: auto; page-break-after: auto">
              The easy way
            </h1>

            <p>
              If you continue reading your
              <%= link_to "Gmail Collection",'https://cenit.io/setup~collection/gmail' %>
              readme you will get instructions to use the CenitHub API. Now you can send emails in a simple
              JSON format like this
            </p>

            <pre>
            <%=
                json_email =
                    '
{
  "to": "support@cenit.io",
  "subject": "Hello",
  "body": "Just to say hello!",
  "attachments": [
    {
      "filename": "file.txt",
      "data": "Sent through CenitHub API"
    }
  ]
}'
                content_tag :code, json_email
            %>
            </pre>

            <p>
              You can try it with a CURL command
            </p>

            <pre>
<code class="hljs stata">curl -<span class="hljs-keyword">H</span>
  <span class="hljs-string">"Content-Type: application/json"</span>\
  -<span class="hljs-keyword">H</span> <span class="hljs-string">"X-User-Access-Key: XXXXXXX"</span>\
  -<span class="hljs-keyword">H</span> <span class="hljs-string">"X-User-Access-Token: XXXXXXXXXXXXXXXX"</span>\
  -X <span class="hljs-keyword">POST</span> -<span class="hljs-keyword">d</span> '{<span class="hljs-string">"to"</span>:<span class="hljs-string">"support@cenit.io"</span>,<span class="hljs-string">"subject"</span>:<span class="hljs-string">"Hello"</span>,<span class="hljs-string">"body"</span>:<span class="hljs-string">"Just to say hello!"</span>,<span class="hljs-string">"attachments"</span>:[{<span class="hljs-string">"filename"</span>:<span class="hljs-string">"file.txt"</span>,<span class="hljs-string">"data"</span>:<span class="hljs-string">"Sent through CenitHub API"</span>}]}'\
  https:<span class="hljs-comment">//www.cenithub.com/api/v1/mime/message</span>
</code>
            </pre>

            <p>
              Just copy the CURL command from the readme (it already contains proper access headers) and run it in your
              console. The email in JSON format is sent to the CenitHub API and then Cenit does all the awkward work for
              you. You can send emails in any format supported by the CenitHub API, XML for example. Multiple
              attachments and binary data are also supported, just continue reading your collection readme to see more
              examples.
            </p>

            <p>
              Because CenitHub automatically manages your OAuth 2.0 access and refreshes tokens, you do not have to
              worry in the future about being authorized again. Just continue sending emails in a simple format through
              the CenitHub API, until you explicitly revoke your authorization with your cenit.io account or in your
              Google Acount configuration.
            </p>

            <p>
              If you find an easier way to use the Gmail API please let us know, surely we can make a wrapper for that
              and then a very much easier way will be available for the community. In fact, we are working on several
              collections similar to this to let you connect with multiple APIs easy. Just check the list of
              <%= link_to 'Shared Collection', 'https://cenit.io/setup~shared_collection' %> that is available so far.
            </p>

            <p>
              You have to know that the ability of Cenit to connect with an API is just a facility to reach a
              major goal, which is the integration of solutions that may involve several APIs. To accomplish that, Cenit
              allows the orchestration of data flows through the configuration of flows, events, data types, connectors,
              authorizations and so on. Inspect the rest of sections of your
              <%=
                  link_to 'Gmail Collection','https://cenit.io/setup~collection/gmail'%> and you will see all the configuration elements composing the collection. You can configure your own
              collections, test them and setup to integrate your real world solutions. The next section gives you a
              background of how your Gmail Collection is configured.
            </p>

             <%= render partial: 'shared/video', locals: { title: 'The easy way to connect with the <strong>Gmail API</strong>'.html_safe, video: 'https://www.youtube.com/embed/oBmGtKd4Ia4' } %>

            <h1 style="line-height: 100%; page-break-before: auto; page-break-after: auto">
              How it works
            </h1>

            <p>
              The workflow that sends an email through CenitHub starts at the DATA configuration area, where the Gmail
              Collection defines the
              <%= link_to 'data types','https://cenit.io/setup~data_type' %> to manage email records. The MIME Message data type is defined by a JSON Schema that references the
              MIME Attachment
              <%= link_to 'file data type','https://cenit.io/setup~file_data_type' %>.
            </p>

            <div style="text-align: center;font-size: 30px;color: #3A4F68">
              <i class="fa fa-envelope-o"></i>
              <i class="fa fa-long-arrow-right"></i>
              <i class="fa fa-save"></i>
              <i class="fa fa-long-arrow-right"></i>
              <i class="fa fa-database"></i>
            </div>

            <p>
              When a MIME Message is created in the administration view of the CenitHub
              portal or via POST using the CenitHub API then a creation event is fired.
              <%= link_to 'Events','https://cenit.io/setup~event'%> are defined in the WORKFLOW area and their main function is to trigger
              <%= link_to 'flows','https://cenit.io/setup~flow'%> executions.
            </p>

            <div style="text-align: center;font-size: 30px">
              <i class="fa fa-database" style="color: #3A4F68"></i>
              <i class="fa fa-long-arrow-right" style="color:#d43f3a"></i>
              <i class="fa fa-fire" style="color:#d43f3a"></i>
              <i class="fa fa-long-arrow-right" style="color:#d43f3a"></i>
              <i class="fa fa-envelope-o" style="color:#d43f3a"></i>
              <i class="fa fa-long-arrow-right" style="color:#d43f3a"></i>

              <div style="position: relative;display: inline;padding-left:1px">
                <i class="fa fa-cog" style="position: absolute;top:.15em;font-size:.9em;color: #1a80d9"></i>
                <i class="fa fa-cog" style="position: absolute;top:.1em;left: 1.45em;font-size:.5em;color: #0F9B0F"></i>
                <i class="fa fa-cog" style="position: absolute;top:1.2em;left: 1.45em;font-size:.5em;color: #eea236"></i>
              </div>
            </div>

            <p>
              By default, your Gmail Collection defines the flow Send Created Message, which is triggered when a MIME
              Message is created. Every flow is associated with a
              <%= link_to 'translator','https://cenit.io/setup~translator' %>, in this case the translator MIME To Gmail API V1 Message, which transforms the MIME Message into a
              JSON document that complies with the Gmail API schema. To accomplish that, the translator first invokes an
              <%= link_to 'algorithm','https://cenit.io/setup~algorithm' %> to convert a message record into a RFC822 format
            </p>

            <div style="text-align: center;font-size: 30px">
              <i class="fa fa-envelope-o" style="color:#d43f3a"></i>
              <i class="fa fa-long-arrow-right" style="color:#d43f3a"></i>
              <i class="fa fa-cog" style="color:#1a80d9"></i>
              <i class="fa fa-long-arrow-right" style="color: #1a80d9"></i>

              <div style="position: relative;display: inline">
                <i class="fa fa-envelope-o" style="color: #1a80d9"> </i>
                <i class="fa fa-at" style="position: absolute;left:.4em;top:.6em;font-size: .6em;background: white;color:#d43f3a"></i>
              </div>
            </div>

            <p>
              Then the translator encodes the result in Base64 to finally build
              the JSON document for the Gmail API schema.
            </p>

            <div style="text-align: center;font-size: 30px">
              <div style="position: relative;display: inline">
                <i class="fa fa-envelope-o" style="color: #1a80d9"> </i>
                <i class="fa fa-at" style="position: absolute;left:.4em;top:.6em;font-size: .6em;background: white;color:#d43f3a"></i>
              </div>
              <i class="fa fa-long-arrow-right" style="color: #1a80d9"></i>
              <i class="fa fa-cog" style="color: #eea236"></i>
              <i class="fa fa-long-arrow-right" style="color: #eea236"></i>
              <i class="fa fa-file-text-o" style="color: #eea236"></i>
            </div>

            <p>
              The document is now ready to be sent to the API CONNECTORS area. The entry point to the API
              connection area is the webhook configured in the flow.
            </p>

            <div style="text-align: center;font-size: 30px">
              <i class="fa fa-file-text-o" style="color: #eea236"></i>
              <i class="fa fa-long-arrow-right" style="color: #eea236"></i>
              <%= image_tag 'blog/api_connetors.png', :alt => 'gmail quick start', class: "img-responsive", style: 'display:inline; height:30px;margin:0;' %>
            </div>

            <p>
              <%= link_to 'Webhooks','https://cenit.io/setup~webhook' %>  act like actions to be submitted via HTTP requests. Submitting a webhook requires a binding to a
              <%= link_to 'connection','https://cenit.io/setup~connection'%>  which defines the endpoint base URL to be completed with the webhook path. Such bind is established by
              a
              <%= link_to 'connection role','https://cenit.io/setup~connection_role' %> that relates the webhook and the connection.
            </p>

            <p>
              Connection roles define many to many relations, which
              means that a single flow execution can submit the same action to multiple endpoints. Your Gmail Collection
              by default uses only one connection role which binds to a single connection, the Gmail API v1 Oauth 2.0
              HTTPS Connection. When a webhook is bound to a connection, the headers and parameters for the request are
              automatically conformed, including any required authorization data, and
              here is when the flow execution reaches the SECURITY area.
            </p>

            <div style="text-align: center;font-size: 30px">
              <div style="display: inline">
                <i class="fa fa-file-text-o" style="color: #eea236"></i>
                <i class="fa fa-long-arrow-right" style="color: #eea236"></i>
              </div>
              <div style="display: inline-block">
                <i class="fa fa-shield" style="display: block;color: #0F9B0F"></i>
                <i class="fa fa-long-arrow-up" style="display: block;color: #0F9B0F"></i>
                <%= image_tag 'blog/api_connetors.png', :alt => 'gmail quick start', class: "img-responsive", style: 'display:inline; height:30px;margin:0;' %>
              </div>
            </div>

            <p>
              The entry point to the security area is the authorization configured in the webhook or the connection.
              <%= link_to 'Authorizations','https://cenit.io/setup~authorization' %> handle credentials complying with several protocols. The Gmail Collection by default uses an
              <%= link_to 'Oauth 2.0 Authorization','https://cenit.io/setup~oauth2_authorization' %> which is simply configured by selecting an
              <%= link_to 'OAuth client application','https://cenit.io/setup~oauth_client' %> and the respective
              <%= link_to 'authorization scopes','https://cenit.io/setup~oauth2_scope' %>. As mentioned before, the credentials are automatically handled, for the case of OAuth 2.0 the
              <%=link_to 'provider configuration','https://cenit.io/setup~base_oauth_provider' %> defines a refresh token strategy that can be selected from a set of build-in strategies or it can be
              customized using an algorithm. CenitHub shares a set of providers, clients and scopes that can be used
              to configure the authorization you need.
            </p>

            <p>
              Once the authorization have been successfully handled, the connectors area submits the document in a
              request including the required authorization headers.
            </p>

            <div style="text-align: center;font-size: 30px">
              <i class="fa fa-file-text-o" style="color: #eea236"></i>
              <i class="fa fa-long-arrow-right" style="color: #eea236"></i>

              <div style="display: inline-block">
                <i class="fa fa-shield" style="display: block;color: #0F9B0F"></i>
                <i class="fa fa-arrows-v" style="display: block;color: #0F9B0F"></i>
                <%= image_tag 'blog/api_connetors.png', :alt => 'gmail quick start', class: "img-responsive", style: 'display:inline; height:30px;margin:0;' %>
              </div>
              <div style="display: inline">
                <i class="fa fa-long-arrow-right" style="color: #0F9B0F"></i>

                <div style="position: relative;display: inline">
                  <i class="fa fa-file-text-o" style="color: #eea236"> </i>
                  <i class="fa fa-certificate" style="position: absolute;top: 4px;left: 3px;font-size: .3em;color: #0F9B0F"></i>
                </div>
              </div>
              <i class="fa fa-long-arrow-right" style="color: #0F9B0F"></i>
              <%= image_tag 'blog/gmail_api_v1_logo.png', :alt => 'gmail quick start', class: "img-responsive", style: 'display:inline; height:50px;padding-bottom:10px;' %>
            </div>

            <p>
              A flow execution does not end when submitting a request. The response is redirected to the workflow area
              where the flow can be configured to process it. In this case, the success Gmail API v1 response contains a
              JSON document with information about the processed message, the Gmail thread identifier, for example,
              which
              would be used for tracking the message but, surely for a future collection version.
            </p>

            <div style="text-align: center; font-size: 25px">
              <i class="fa fa-envelope-o" style="color: #3A4F68"></i>
              <i class="fa fa-long-arrow-right" style="color: #3A4F68"></i>
              <i class="fa fa-save" style="color: #3A4F68"></i>
              <i class="fa fa-long-arrow-right" style="color: #3A4F68"></i>
              <i class="fa fa-database" style="color: #3A4F68"></i>
              <i class="fa fa-long-arrow-right" style="color:#d43f3a"></i>
              <i class="fa fa-fire" style="color:#d43f3a"></i>
              <i class="fa fa-long-arrow-right" style="color:#d43f3a"></i>
              <i class="fa fa-envelope-o" style="color:#d43f3a"></i>
              <i class="fa fa-long-arrow-right" style="color:#d43f3a"></i>
              <i class="fa fa-cog" style="color:#1a80d9"></i>
              <i class="fa fa-long-arrow-right" style="color: #1a80d9"></i>

              <div style="position: relative;display: inline">
                <i class="fa fa-envelope-o" style="color: #1a80d9"> </i>
                <i class="fa fa-at" style="position: absolute;left:.4em;top:.6em;font-size: .6em;background: white;color:#d43f3a"></i>
              </div>
              <i class="fa fa-long-arrow-right" style="color: #1a80d9"></i>
              <i class="fa fa-cog" style="color: #eea236"></i>
              <i class="fa fa-long-arrow-right" style="color: #eea236"></i>
              <i class="fa fa-file-text-o" style="color: #eea236"></i>
              <i class="fa fa-long-arrow-right" style="color: #eea236"></i>

              <div style="display: inline-block">
                <i class="fa fa-shield" style="display: block;color: #0F9B0F"></i>
                <i class="fa fa-arrows-v" style="display: block;color: #0F9B0F"></i>
                <%= image_tag 'blog/api_connetors.png', :alt => 'gmail quick start', class: "img-responsive", style: 'display:inline; height:25px;margin:0;' %>
              </div>
              <div style="display: inline">
                <i class="fa fa-long-arrow-right" style="color: #0F9B0F"></i>

                <div style="position: relative;display: inline">
                  <i class="fa fa-file-text-o" style="color: #eea236"> </i>
                  <i class="fa fa-certificate" style="position: absolute;top: 4px;left: 3px;font-size: .3em;color: #0F9B0F"></i>
                </div>
              </div>
              <i class="fa fa-long-arrow-right" style="color: #0F9B0F"></i>
              <%= image_tag 'blog/gmail_api_v1_logo.png', :alt => 'gmail quick start', class: "img-responsive", style: 'display:inline; height:40px;padding-bottom:5px;' %>
            </div>

            <h1 style="line-height: 100%; page-break-before: auto; page-break-after: auto"><a name="h.upe549z9qgg5"></a>
              Whatâ€™s next
            </h1>

            <p>
              Check the list of
              <%=link_to 'Shared Collection','https://cenit.io/setup~shared_collection' %> that is available and try another easy way to connect with an API. Just pull a collection and play
              with it. Have not found the collection you are interesting in? Let us know.
            </p>

            <%= render 'footer' %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>             


